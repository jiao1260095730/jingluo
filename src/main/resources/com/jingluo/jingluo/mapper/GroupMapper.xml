<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.jingluo.jingluo.mapper.GroupMapper">
    <resultMap id="BaseResultMap" type="com.jingluo.jingluo.entity.Group">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="group_id" property="groupId" jdbcType="INTEGER"/>
        <result column="course_id" property="courseId" jdbcType="INTEGER"/>
        <result column="class_id" property="classId" jdbcType="INTEGER"/>
        <result column="group_name" property="groupName" jdbcType="VARCHAR"/>
        <result column="group_info" property="groupInfo" jdbcType="VARCHAR"/>
        <result column="head_img" property="headImg" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="DATE"/>
        <result column="student_code" property="studentCode" jdbcType="VARCHAR"/>
        <result column="stu_num" property="stuNum" jdbcType="INTEGER"/>
        <result column="is_public" property="isPublic" jdbcType="CHAR"/>
        <result column="create_from" property="createFrom" jdbcType="CHAR"/>
        <result column="reserved_1" property="reserved1" jdbcType="VARCHAR"/>
        <result column="reserved_2" property="reserved2" jdbcType="VARCHAR"/>
        <result column="reserved_3" property="reserved3" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="insertGroupStudent" parameterType="com.jingluo.jingluo.entity.StudentGroup">
    INSERT  INTO student_group(stu_gro_id,student_id,group_id)VALUES (#{stuGroId}, #{studentId}, #{groupId})
  </insert>

    <select id="selectAllGroup" resultMap="BaseResultMap">
      select * from `group`
    </select>

    <delete id="deleteGroup">
    delete from  `group` where group_id = #{groupId}
  </delete>

    <delete id="deleteStudentGroup">
    delete from  student_group where group_id = #{groupId}
  </delete>

    <select id="findGroupId" resultMap="BaseResultMap">
        select * from `group` where group_id = #{groupId}
    </select>

    <delete id="deleteGroupMember">
        delete from  student_group where student_id = #{studentId}
    </delete>

    <select id="selectGroupByClassId" resultMap="BaseResultMap">
        select * from `group` where class_id = #{classId}
  </select>

    <select id="selectGroupByGroupName" resultMap="BaseResultMap">
        select * from `group` where group_name LIKE "%"#{selectName}
  </select>

    <select id="selectGroupByGroupId" resultMap="BaseResultMap">
        select * from `group` where group_id = #{groupId}
    </select>
    <select id="selectStundentGroup" parameterType="com.jingluo.jingluo.entity.StudentGroup" resultType="com.jingluo.jingluo.entity.StudentGroup">
        SELECT * FROM `student_group` where student_id = #{studentId} and group_id = #{groupId}
    </select>

    <select id="selectStudentByGroupId" resultType="com.jingluo.jingluo.entity.Student">
        select * from student s WHERE  s.student_id in
        (SELECT sg.student_id from student_group sg where group_id = #{groupId})
    </select>

    <select id="selectAllGroupByUserCode" resultMap="BaseResultMap">
        select c.* from student a, student_group b, `group` c
        where a.student_id = b.student_id
        and b.group_id = c.group_id
        and a.student_code = #{userCode}
    </select>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        id, group_id, course_id, class_id,student_code, group_name, group_info, create_time, stu_num,is_public,
        create_from, reserved_1, reserved_2, reserved_3
    </sql>


    <insert id="insertSelective" parameterType="com.jingluo.jingluo.entity.Group">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        insert into `group`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="classId != null">
                class_id,
            </if>
            <if test="studentCode != null">
                student_code,
            </if>
            <if test="headImg != null">
                head_img,
            </if>
            <if test="groupName != null">
                group_name,
            </if>
            <if test="groupInfo != null">
                group_info,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="stuNum != null">
                stu_num,
            </if>
            <if test="isPublic != null">
                is_public,
            </if>
            <if test="createFrom != null">
                create_from,
            </if>
            <if test="reserved1 != null">
                reserved_1,
            </if>
            <if test="reserved2 != null">
                reserved_2,
            </if>
            <if test="reserved3 != null">
                reserved_3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=INTEGER},
            </if>
            <if test="studentCode != null">
                #{studentCode,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null">
                #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="groupName != null">
                #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="groupInfo != null">
                #{groupInfo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="stuNum != null">
                #{stuNum,jdbcType=INTEGER},
            </if>
            <if test="isPublic != null">
                #{isPublic,jdbcType=CHAR},
            </if>
            <if test="createFrom != null">
                #{createFrom,jdbcType=CHAR},
            </if>
            <if test="reserved1 != null">
                #{reserved1,jdbcType=VARCHAR},
            </if>
            <if test="reserved2 != null">
                #{reserved2,jdbcType=VARCHAR},
            </if>
            <if test="reserved3 != null">
                #{reserved3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.jingluo.jingluo.entity.Group">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        update `group`
        <set>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="classId != null">
                class_id = #{classId,jdbcType=INTEGER},
            </if>
            <if test="studentCode != null">
                student_code = #{studentCode,jdbcType=VARCHAR},
            </if>
            <if test="headImg != null">
                head_img = #{headImg,jdbcType=VARCHAR},
            </if>
            <if test="groupName != null">
                group_name = #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="groupInfo != null">
                group_info = #{groupInfo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=DATE},
            </if>
            <if test="stuNum != null">
                stu_num = #{stuNum,jdbcType=INTEGER},
            </if>
            <if test="isPublic != null">
                is_public = #{isPublic,jdbcType=CHAR},
            </if>
            <if test="createFrom != null">
                create_from = #{createFrom,jdbcType=CHAR},
            </if>
            <if test="reserved1 != null">
                reserved_1 = #{reserved1,jdbcType=VARCHAR},
            </if>
            <if test="reserved2 != null">
                reserved_2 = #{reserved2,jdbcType=VARCHAR},
            </if>
            <if test="reserved3 != null">
                reserved_3 = #{reserved3,jdbcType=VARCHAR},
            </if>
        </set>
        where group_id = #{groupId,jdbcType=INTEGER}
    </update>


</mapper>