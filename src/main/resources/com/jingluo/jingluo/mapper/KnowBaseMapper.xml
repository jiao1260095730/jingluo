<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jingluo.jingluo.mapper.KnowBaseMapper">
    <resultMap id="BaseResultMap" type="com.jingluo.jingluo.entity.KnowBase">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="base_id" property="baseId" jdbcType="INTEGER"/>
        <result column="course_id" property="courseId" jdbcType="INTEGER"/>
        <result column="group_id" property="groupId" jdbcType="INTEGER"/>
        <result column="base_name" property="baseName" jdbcType="VARCHAR"/>
        <result column="parent_name" property="parentName" jdbcType="VARCHAR"/>
        <result column="base_info" property="baseInfo" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="DATE"/>
        <result column="update_time" property="updateTime" jdbcType="DATE"/>
        <result column="doc_num" property="docNum" jdbcType="INTEGER"/>
        <result column="read_num" property="readNum" jdbcType="INTEGER"/>
        <result column="att_num" property="attNum" jdbcType="INTEGER"/>
        <result column="base_kind" property="baseKind" jdbcType="CHAR"/>
        <result column="is_show" property="isShow" jdbcType="CHAR"/>
        <result column="is_public" property="isPublic" jdbcType="CHAR"/>
        <result column="is_delete" property="isDelete" jdbcType="CHAR"/>
        <result column="create_from" property="createFrom" jdbcType="CHAR"/>
        <result column="reserved_1" property="reserved1" jdbcType="VARCHAR"/>
        <result column="reserved_2" property="reserved2" jdbcType="VARCHAR"/>
        <result column="reserved_3" property="reserved3" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectKnowBasesByUserCode" resultMap="BaseResultMap">
        select * from know_base where know_base.student_code = #{userCode}
    </select>

    <select id="selectKnowBasesByGroupId" resultMap="BaseResultMap">
        select * from know_base where know_base.group_id = #{groupId}
    </select>

    <select id="selectKBByUserCodeAndKeyWord" resultMap="BaseResultMap">
        select * from know_base where know_base.student_code = #{userCode}
        and know_base.base_name like concat('%',#{keyWord},'%')
  </select>

    <select id="selectKBByGroupIdAndKeyWord" resultMap="BaseResultMap">
        select * from know_base where know_base.group_id = #{groupId}
        and know_base.base_name like concat('%',#{keyWord},'%')
    </select>

    <update id="deleteOneKnowBase" parameterType="int">
        update know_base set is_delete = "1"
        where base_id = #{baseId}
    </update>

    <delete id="deleteOneKnowBaseReally" parameterType="int">
        delete from know_base
        where base_id = #{baseId}
    </delete>

    <select id="selectknowBaseByBaseId" parameterType="int" resultMap="BaseResultMap">
        select * from know_base where base_id = #{baseId}
    </select>


    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 05 21:51:04 CST 2020.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 05 21:51:04 CST 2020.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 05 21:51:04 CST 2020.
        -->
        id, base_id, course_id, group_id, student_code, base_name, parent_name, base_info,
        create_time, update_time, doc_num, read_num, att_num, base_kind, is_show, is_public,
        is_delete, create_from, reserved_1, reserved_2, reserved_3
    </sql>

    <insert id="insert" parameterType="com.jingluo.jingluo.entity.KnowBase">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        insert into know_base (id, base_id, course_id,
        group_id, student_code, base_name,
        parent_name, base_info, create_time,
        update_time, doc_num, read_num,
        att_num, base_kind, is_show,
        is_public, is_delete, create_from,
        reserved_1, reserved_2, reserved_3
        )
        values (#{id,jdbcType=INTEGER}, #{baseId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER},
        #{groupId,jdbcType=INTEGER}, #{studentCode,jdbcType=VARCHAR}, #{baseName,jdbcType=VARCHAR},
        #{parentName,jdbcType=VARCHAR}, #{baseInfo,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE},
        #{updateTime,jdbcType=DATE}, #{docNum,jdbcType=INTEGER}, #{readNum,jdbcType=INTEGER},
        #{attNum,jdbcType=INTEGER}, #{baseKind,jdbcType=CHAR}, #{isShow,jdbcType=CHAR},
        #{isPublic,jdbcType=CHAR}, #{isDelete,jdbcType=CHAR}, #{createFrom,jdbcType=CHAR},
        #{reserved1,jdbcType=VARCHAR}, #{reserved2,jdbcType=VARCHAR}, #{reserved3,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.jingluo.jingluo.entity.KnowBase">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        insert into know_base
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="baseId != null">
                base_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="groupId != null">
                group_id,
            </if>
            <if test="studentCode != null">
                student_code,
            </if>
            <if test="baseName != null">
                base_name,
            </if>
            <if test="parentName != null">
                parent_name,
            </if>
            <if test="baseInfo != null">
                base_info,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="docNum != null">
                doc_num,
            </if>
            <if test="readNum != null">
                read_num,
            </if>
            <if test="attNum != null">
                att_num,
            </if>
            <if test="baseKind != null">
                base_kind,
            </if>
            <if test="isShow != null">
                is_show,
            </if>
            <if test="isPublic != null">
                is_public,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createFrom != null">
                create_from,
            </if>
            <if test="reserved1 != null">
                reserved_1,
            </if>
            <if test="reserved2 != null">
                reserved_2,
            </if>
            <if test="reserved3 != null">
                reserved_3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="baseId != null">
                #{baseId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="groupId != null">
                #{groupId,jdbcType=INTEGER},
            </if>
            <if test="studentCode != null">
                #{studentCode,jdbcType=VARCHAR},
            </if>
            <if test="baseName != null">
                #{baseName,jdbcType=VARCHAR},
            </if>
            <if test="parentName != null">
                #{parentName,jdbcType=VARCHAR},
            </if>
            <if test="baseInfo != null">
                #{baseInfo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=DATE},
            </if>
            <if test="docNum != null">
                #{docNum,jdbcType=INTEGER},
            </if>
            <if test="readNum != null">
                #{readNum,jdbcType=INTEGER},
            </if>
            <if test="attNum != null">
                #{attNum,jdbcType=INTEGER},
            </if>
            <if test="baseKind != null">
                #{baseKind,jdbcType=CHAR},
            </if>
            <if test="isShow != null">
                #{isShow,jdbcType=CHAR},
            </if>
            <if test="isPublic != null">
                #{isPublic,jdbcType=CHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=CHAR},
            </if>
            <if test="createFrom != null">
                #{createFrom,jdbcType=CHAR},
            </if>
            <if test="reserved1 != null">
                #{reserved1,jdbcType=VARCHAR},
            </if>
            <if test="reserved2 != null">
                #{reserved2,jdbcType=VARCHAR},
            </if>
            <if test="reserved3 != null">
                #{reserved3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.jingluo.jingluo.entity.KnowBase">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        update know_base
        <set>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="groupId != null">
                group_id = #{groupId,jdbcType=INTEGER},
            </if>
            <if test="studentCode != null">
                student_code = #{studentCode,jdbcType=VARCHAR},
            </if>
            <if test="baseName != null">
                base_name = #{baseName,jdbcType=VARCHAR},
            </if>
            <if test="parentName != null">
                parent_name = #{parentName,jdbcType=VARCHAR},
            </if>
            <if test="baseInfo != null">
                base_info = #{baseInfo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=DATE},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=DATE},
            </if>
            <if test="docNum != null">
                doc_num = #{docNum,jdbcType=INTEGER},
            </if>
            <if test="readNum != null">
                read_num = #{readNum,jdbcType=INTEGER},
            </if>
            <if test="attNum != null">
                att_num = #{attNum,jdbcType=INTEGER},
            </if>
            <if test="baseKind != null">
                base_kind = #{baseKind,jdbcType=CHAR},
            </if>
            <if test="isShow != null">
                is_show = #{isShow,jdbcType=CHAR},
            </if>
            <if test="isPublic != null">
                is_public = #{isPublic,jdbcType=CHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=CHAR},
            </if>
            <if test="createFrom != null">
                create_from = #{createFrom,jdbcType=CHAR},
            </if>
            <if test="reserved1 != null">
                reserved_1 = #{reserved1,jdbcType=VARCHAR},
            </if>
            <if test="reserved2 != null">
                reserved_2 = #{reserved2,jdbcType=VARCHAR},
            </if>
            <if test="reserved3 != null">
                reserved_3 = #{reserved3,jdbcType=VARCHAR},
            </if>
        </set>
        where base_id = #{baseId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jingluo.jingluo.entity.KnowBase">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Apr 12 14:02:13 CST 2020.
        -->
        update know_base
        set course_id = #{courseId,jdbcType=INTEGER},
        group_id = #{groupId,jdbcType=INTEGER},
        student_code = #{studentCode,jdbcType=VARCHAR},
        base_name = #{baseName,jdbcType=VARCHAR},
        parent_name = #{parentName,jdbcType=VARCHAR},
        base_info = #{baseInfo,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=DATE},
        update_time = #{updateTime,jdbcType=DATE},
        doc_num = #{docNum,jdbcType=INTEGER},
        read_num = #{readNum,jdbcType=INTEGER},
        att_num = #{attNum,jdbcType=INTEGER},
        base_kind = #{baseKind,jdbcType=CHAR},
        is_show = #{isShow,jdbcType=CHAR},
        is_public = #{isPublic,jdbcType=CHAR},
        is_delete = #{isDelete,jdbcType=CHAR},
        create_from = #{createFrom,jdbcType=CHAR},
        reserved_1 = #{reserved1,jdbcType=VARCHAR},
        reserved_2 = #{reserved2,jdbcType=VARCHAR},
        reserved_3 = #{reserved3,jdbcType=VARCHAR}
        where base_id = #{baseId,jdbcType=INTEGER}
    </update>
</mapper>